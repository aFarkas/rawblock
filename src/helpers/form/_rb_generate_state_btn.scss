//selection styling outer selection
$state-btn-size: 40px !default;
$state-btn-position-top: 5px !default;
$state-btn-position-left: 0 !default;
$state-btn-border: 1px solid #aaa !default;
$state-btn-border-color-hover: #507aff !default;
$state-btn-bg-color: #fff !default;
$state-btn-padding-inner: 5px !default;
$state-btn-bg-color-inner: #507aff  !default;

//Deactive (readonly/disabled)
$state-btn-deactive-color: #eee !default;

//selection invalid colors
$state-btn-invalid-border-color: red !default;

$state-btn-inline-margin: 30px !default;
$state-btn-padding: 14px 0 14px 55px !default;



@mixin generate-state-btn($name, $type: checkbox, $custom:true) {

    .is-#{$type}  {

        .#{$name}-label-#{$type} {
            margin: 0;
        }

        @if $custom {
            .#{$name}-input[type="#{$type}"]{
                overflow: hidden;
                position: absolute;
                margin: 0;
                padding: 0;
                clip: rect(1px, 1px, 1px, 1px);
                background : none;
            }
        }

        .#{$name}-label {
            display: block;
            padding: $state-btn-padding;

            @if $custom {

                &::before {
                    content: "";
                    position: absolute;
                    top: $state-btn-position-top;
                    left: $state-btn-position-left;
                    width: $state-btn-size;
                    height: $state-btn-size;
                    padding: $state-btn-padding-inner;
                    border: $state-btn-border;
                    background-color: $state-btn-bg-color;
                    background-clip: content-box;

                    @if $type == "radio" {
                        border-radius: 50%;
                    }

                    .is-invalid & {
                        border-color: $state-btn-invalid-border-color;
                    }
                }
            }
        }

        //Status Selection buttons
        .#{$name}-input:checked {
            ~ .is-label-#{$type} {
                &::before {
                    background-color: $state-btn-bg-color-inner;
                }
            }
        }

        .#{$name}-input[disabled] ~ .is-label-#{$type},
        .#{$name}-input[readonly] ~ .is-label-#{$type} {
            cursor: not-allowed;

            &::before {
                opacity: 0.4;
                cursor: not-allowed;
            }
        }
    }

    .#{$name}-input:focus:not([disabled]):not([readonly]),
    .#{$name}-input:hover:not([disabled]):not([readonly]) {

        ~ .is-label-#{$type} {

            &::before {

                .is-#{$type} & {
                    border-color: $state-btn-border-color-hover;
                }

                .is-#{$type}.is-invalid & {
                    border-color: $state-btn-border-color-hover;
                }
            }
        }
    }

    //.is-invalid  {
    //    &input:focus:not([disabled]):not([readonly]),
    //    &input:hover:not([disabled]):not([readonly]) {
    //
    //        ~ .is-label-#{$type} {
    //            &::before {
    //                border-color: $state-btn-border-color-hover;
    //            }
    //        }
    //    }
    //
    //    &label {
    //
    //        &::before {
    //            border-color: $state-btn-invalid-border-color;
    //        }
    //    }
    //}
}