// Creates the width of a column.
// Ranging from 5% to 100% with 5% increments and adjust the width for all screensizes
// Additional sizes are: 16.6666% (1/6), 33.3333% (1/3) and 66.6666% (2/3).
//
// @param {String} $breakpoint-name - Breakpoint name added to end of class (with the exception of all) which correspond to the assigned screen size.
//
@mixin rb-util-sizes($breakpoint-name) {
    $i: 5;
    $steps: 5;
	$type: null;

    @if $breakpoint-name == 'all' {
        $type: '';
    } @else {
        $type: $rb-name-separator + $breakpoint-name;
    }

    .u#{$rb-name-separator}size#{$rb-name-separator}auto#{$type} {
        width: auto;
    }

    //Element will take available space
    .u#{$rb-name-separator}size#{$rb-name-separator}flex#{$type} {
        flex: 1;
        width: auto;
    }

    //Element will take twice the available space
    .u#{$rb-name-separator}size#{$rb-name-separator}flex#{$rb-name-separator}double#{$type} {
        flex: 2;
        width: auto;
    }

    .u#{$rb-name-separator}size#{$rb-name-separator}66#{$type} {
        width: 66.6666%;
    }

    .u#{$rb-name-separator}size#{$rb-name-separator}33#{$type} {
        width: 33.3333%;
    }

    .u#{$rb-name-separator}size#{$rb-name-separator}16#{$type} {
        width: 16.6666%;
    }

    @while $i <= 100 {

        // create
        &.u#{$rb-name-separator}size#{$rb-name-separator}#{$i}#{$type} {
            width: $i * 1%;
        }

        // increment the counter
        $i: $i + $steps;
    }
}
